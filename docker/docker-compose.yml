services:
  postgres:
    image: postgres:15
    container_name: courier_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    image: saurabh896/courier-backend:latest
    container_name: courier-backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${SPRING_PORT}:8080"

  # frontend:
  #     build:
  #       context: ../frontend
  #       dockerfile: ../docker/Dockerfile.frontend
  #     ports:
  #       - "3000:3000"
  #     volumes:
  #       - ../frontend:/app  
  #       - /app/node_modules
  #     environment:
  #       - NODE_ENV=development
  #       - CHOKIDAR_USEPOLLING=true
  #     command: npm start

  frontend:
    image: saurabh896/courier-frontend:latest
    container_name: courier-frontend
    ports:
      - "${REACT_PORT}:80"

volumes:
  postgres_data: